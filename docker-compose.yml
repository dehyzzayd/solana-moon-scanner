version: '3.8'

services:
  moon-scanner:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: solana-moon-scanner
    restart: unless-stopped
    
    # Environment variables from .env file
    env_file:
      - .env
    
    # Optional: Override specific environment variables
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - PROMETHEUS_ENABLED=${PROMETHEUS_ENABLED:-true}
      - PROMETHEUS_PORT=9090
    
    # Expose Prometheus metrics port
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    
    # Mount volumes for logs and data persistence
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - ./.env:/app/.env:ro
    
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '1'
          memory: 512M
    
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    
    # Health check
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    
    # Network mode
    network_mode: bridge

# Optional: Prometheus server for metrics visualization
  prometheus:
    image: prom/prometheus:latest
    container_name: moon-scanner-prometheus
    restart: unless-stopped
    
    ports:
      - "9091:9090"
    
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    
    depends_on:
      - moon-scanner
    
    profiles:
      - monitoring

# Optional: Grafana for advanced visualization
  grafana:
    image: grafana/grafana:latest
    container_name: moon-scanner-grafana
    restart: unless-stopped
    
    ports:
      - "3000:3000"
    
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    
    volumes:
      - grafana-data:/var/lib/grafana
    
    depends_on:
      - prometheus
    
    profiles:
      - monitoring

volumes:
  prometheus-data:
  grafana-data:
